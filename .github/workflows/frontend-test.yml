name: Frontend Tests

on:
  push:
    branches: [ main, develop ]
    paths: ['frontend/**']
  pull_request:
    branches: [ main ]
    paths: ['frontend/**']

jobs:
  unit-integration-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript check
      run: npm run build --if-present
    
    - name: Run unit and integration tests
      run: npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: frontend/coverage/
        retention-days: 7

  e2e-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Start backend server
      working-directory: backend
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        python main.py &
        sleep 10
      env:
        PYTHONPATH: .
    
    - name: Run E2E tests
      run: npm run test:e2e
      env:
        CI: true
    
    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 7
    
    - name: Upload E2E test videos
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: playwright-videos
        path: frontend/test-results/
        retention-days: 7

  quality-gate:
    runs-on: ubuntu-latest
    needs: [unit-integration-test, e2e-test]
    defaults:
      run:
        working-directory: frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npx eslint src --ext .ts,.tsx --max-warnings 0
    
    - name: Run Prettier check
      run: npx prettier --check "src/**/*.{ts,tsx,css}"
    
    - name: Check bundle size
      run: npm run build
    
    - name: Analyze bundle
      run: |
        npm install -g bundlesize
        bundlesize
      continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level high
    
    - name: Run dependency check
      run: npx depcheck
      continue-on-error: true